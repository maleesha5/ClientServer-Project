
package ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "employee_ser", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EmployeeSer {


    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "delete", targetNamespace = "http://ws/", className = "ws.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://ws/", className = "ws.DeleteResponse")
    @Action(input = "http://ws/employee_ser/deleteRequest", output = "http://ws/employee_ser/deleteResponse")
    public boolean delete(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns boolean
     * @throws InvalidInputException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://ws/", className = "ws.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://ws/", className = "ws.LoginResponse")
    @Action(input = "http://ws/employee_ser/loginRequest", output = "http://ws/employee_ser/loginResponse", fault = {
        @FaultAction(className = InvalidInputException_Exception.class, value = "http://ws/employee_ser/login/Fault/InvalidInputException")
    })
    public boolean login(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password)
        throws InvalidInputException_Exception
    ;

    /**
     * 
     * @param password
     * @param name
     * @param position
     * @param repeatpassword
     * @param username
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "update_emp")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "update_emp", targetNamespace = "http://ws/", className = "ws.UpdateEmp")
    @ResponseWrapper(localName = "update_empResponse", targetNamespace = "http://ws/", className = "ws.UpdateEmpResponse")
    @Action(input = "http://ws/employee_ser/update_empRequest", output = "http://ws/employee_ser/update_empResponse")
    public boolean updateEmp(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "position", targetNamespace = "")
        String position,
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "Password", targetNamespace = "")
        String password,
        @WebParam(name = "repeatpassword", targetNamespace = "")
        String repeatpassword);

    /**
     * 
     * @param password
     * @param name
     * @param position
     * @param repeatpassword
     * @param username
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "create_employee")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "create_employee", targetNamespace = "http://ws/", className = "ws.CreateEmployee")
    @ResponseWrapper(localName = "create_employeeResponse", targetNamespace = "http://ws/", className = "ws.CreateEmployeeResponse")
    @Action(input = "http://ws/employee_ser/create_employeeRequest", output = "http://ws/employee_ser/create_employeeResponse")
    public boolean createEmployee(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "position", targetNamespace = "")
        String position,
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "Password", targetNamespace = "")
        String password,
        @WebParam(name = "repeatpassword", targetNamespace = "")
        String repeatpassword);

}
